<@magic>
  ??
  ??*
<@FORloop>
  F
<@loop>
  W
  U
<T>
	T1\	bar("#1#");	baz(#2#);
	  string	int
	  one		1
	  two		2
	  three	3
<M>
	M*	s/	/	/	;
	      a	ae	g
	      A	Ae
	      b
	M	foo(	) + bar(	);
	           a
	           a		b
	           a		b		c

	           1		2
	           1.1	2.2
	           one	two
<R>
	R	1..3	a	b	
	  d
	  d	
	  d	e
	  d	e	
	  d	e	f

<hide>
	hide
	  blah blah
	  hide
	    bloh bloh
	hide	comment
	  blih blih
<freetext>
	freeline 1
	freeline 2	with tab
	 freeline 3	with tab
	     freeline 4
	freeline with special character $. 'quote' "double_quote" @ARGV
	D	"a line beginning with D"
<vars>
	var 1
	var 2	comment var 2
	D	a var with name D
	var 3
	  init 1
	  init 2	comment init 2
	  D		"a value of a var with name D"
	var 4	comment var 4
	  init 1
	  init 2	comment init 2
<$proclang> code
	<freetext>
	<hide>

<$cc>  comment

package	test
imports
  java.awt.*

doc
  <freetext>
interface i1
  public f1	int a
class 1
  usage	shortdesc
	  <freetext>
	  <hide>
  main
      an autocomment for main
    Option			comment Option
      a				shortdesc a with special character $. 'quote' "double_quote" @ARGV
      b				shortdesc b	stmt b
      c:num[]			shortdesc c
      d:num[30]			shortdesc d
      n:num[1.2]			shortdesc n
      e:file[]			shortdesc e	stmt e
      f:file[/tmp/schrott]	shortdesc f	stmt f
    doc
      some comment tests
	with indent
    ?	commenttest1
      doc	main commentline
	another comment
	  with indent
      ?	commenttest2
	doc	only a main commentline
	statement
      -
	doc
	  to have more than 3 comments
	    with indent
	statement
  function 1
      an autocomment for function 1
  vars
    <vars>
  function 1
    doc
      <freetext>
      <hide>
    FOREVER	stmt
    FOREVER	stmt 1
      stmt 2
      D	"a D in a loop"
    FOREVER
      stmt
    F	i=0...20	"ja"
    <@FORloop>	i=0;i<10;i++
      forloopstatement
    <@FORloop>	i=0;i<10;i++	forloopstatement
    <@loop>	expr
    <@loop>	expr
      stmt
    <@loop>	expr	stmt
    <@loop>	expr	stmt 1
      stmt 2

    ?	expr1
      stmt1
      Di	"a D in an if (tagged i)"
	more stuff inside D (tagged i)
	<@FORloop>	i=0;i<10;i++
	  forloopstatement
      Dt	"a D in an if (tagged t)"
      more stuff inside D (tagged t)
    -
      stmt2
    ?	expr2		truestmt2
    ?	expr3		truestmt3	falsestmt3
    ?	expr4		truestmt4
    ?-	expr5
      truestmt5
    ?-	expr6		truestmt6
    ?-	expr7		truestmt7	falsestmt7
    ?	expr8
    !-	expr9		truestmt9	falsestmt9
    !	expr10
    !	expr11		truestmt11
    !	expr12		truestmt12	falsestmt12

    <@magic>
      middlepart
      -
    <@magic>	leftpart
      middlepart		statement
      -
	stmnt
    <@magic>	leftpart	rightpart
    <@magic>	leftpart	rightpart	LeftOfStmt
    <@magic>	leftpart	rightpart	LeftOfStmt	RightOfStmt
      middlepart		statement	comment middlepart
      -	falsestmt
      --	falsestmt
    statement3
    statement4		comment statement4
    "magically printed"
    "magically printed"	comment magically printed
    <$proclang> code<
	//should be shifted to the very left
	<freetext>

    <$proclang> code
	//should be indented properly
	<freetext>
	<hide>

    <M>
    <R>
    <T>
    <$cc>  comment
    <hide>
    S	i
      'a'		'One'
      'b'		'two'
	S	j
	  'A'	'eins'
	  'B'	'zwei'
	  default	'sau viel'
      'c'		'three'
      default	'something else'
    'cut'
    S*	i
      'a'		'One'
      'b'		'two'
	S	j
	  'A'	'eins'
	  'B'	'zwei'
	  default	'sau viel'
      'c'		'three'
      default	'something else'
    try	trystmt
      execption1	execption1stmt
      execption2	execption2stmt
      finally	finallystmt
    try
	trystmt
      execption1
	execption1stmt
      execption2
	execption2stmt
      finally
	finallystmt
  function2	int y	throws Exception
    foo()
  main
    foo()
    M	foo(	) + bar(	);
	    a
	    a		b
	    a		b		c
	    1		2
	    1.1		2.2
	    one		two
    R	1..3	a	b	
      d
      d	
      d	e
      d	e	
      d	e	f
    <$cc>  comment
    <hide>
  public class troff extends tron
    private
      int i
      int j
    vars
      currency euro
    setme
      thirty=30
  static
    static_code()
