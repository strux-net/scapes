#!/usr/bin/perl
#
# Autogenerated from perl_tru using i.plTR
# do not edit this file, look for i.plTR and change this
# or you may loose all your changes and probably choose the wrong method.
# goto http://www.strux.net to find more information.
#
#  protos
sub usage;
sub main;
$opt_i = 0;
$opt_o = 0;
$opt_it = 0;
if (@ARGV == 1 and $ARGV[0] eq '-?') {
  usage();
}
# based on i.plTR , version : 3.0

sub usage
{
  print STDERR <<'EOU';
usage : i [<Option>] [<file>]
indents or outdents a file by a given amount.
tabs are assumed to count for 8 spaces.

care is taken not to simply prepend spaces to lines that start with a tab.

reads stdin if no file is given.

only one option can be given.
without any option it defaults to -i 2

OPTIONS:
  -i:<number>	indent in  (by space)
  -o:<number>	indent out (by space)
  -it:<number>	indent in  (by tab)
  -version	show version information
EOU
  exit(1);
}

sub main
{
  if ( $ARGV[0] eq "-version" ) {
    print "Version :\n";
    print "  i.plTR	3.0\n";
    exit 0
  }
  use Getopt::Long;
  usage() if !GetOptions('it=s','o=s','i=s');
    # -i : indent in  (by space)
    if ($opt_i) {
      $optcount++;
    }
    # -o : indent out (by space)
    if ($opt_o) {
      $optcount++;
    }
    # -it : indent in  (by tab)
    if ($opt_it) {
      $optcount++;
    }
  if ($optcount == 0) {
    $opt_i=2;
  }
  if ($optcount >  1) {
    usage;
  }
  while (<>) {
    if (!($_ eq "\n")) {
      if ($opt_i) {
        s/^(\t*)/$1.(" "x$opt_i)/eo;
      } elsif ($opt_it) {
        s/^/"\t"x$opt_it/eo;
      } elsif ($opt_o) {
        if (!(s/^(\t*) {$opt_o}/$1/o)) {
          $remaining = $opt_o;
          s/^(\t*)( *)/$1/o;                       # as many spaces as possible
          $remaining-=length($2);
          #****************************************
          # here we have only leading tabs, no more spaces
          #****************************************
          $tc = int($remaining/8);                 # nr of tabs to remove
          $sc = $remaining%8;                      # nr of spaces left to remove
          s/^\t{$tc}//;                            # remove the tabs
          s/^(\t*)\t/$1.(" "x(8-$sc))/e;           # handle the remaining spaces, take them from a left-over tab
        }
      }
    }
    print;
  }
}
main();
