# Autogenerated makefile
# by :
#   m_tru mTR >makefile
#
m_diff=bash -c 'if ! diff -a -q $$1 ok/$$1 >/dev/null ; then echo -e "BAD\t$$1\tok/$$1" ; else echo -e "GOOD\t$$1" ; fi ; ' m_diff
m_copy=bash -c 'if ! diff -a -q $$1 $$2    >/dev/null ; then echo copying $$1 $$2; cp -p $$1 $$2 ; fi ; ' m_copy
ALL:\
  i\

install install_ALL:\
  install_i\

test test_ALL:\
  test_i\

logged_build:
	-@${MAKE} --no-print-directory test_ALL 2>&1 | perl -pe 's,$$ENV{HOME}/,~/,g' >m.log # substitute /home/username with ~  (to avoid test-fails for trivial reasons)
	@${m_diff} m.log
confirmed_install: confirm install
confirm:
	@bash -c 'read -p "really install ? (^C) if not"'
export Title=indents or outdents a file by a given amount.
install_i:
	@echo  installing i
	@${m_copy} i ok/i
	@${m_copy} docs/README.txt ok/docs/README.txt
	@${m_copy} docs/README.html ok/docs/README.html
	@${m_copy} i ~/strux/bin/i
test_i: i
	@echo  testing i
	./i testfile
	./i -i 2 testfile
	./i -o 2 testfile
	./i -o 6 testfile
	./i -o 12 testfile
	-./i -help
.PHONY: i
i:
	@echo  building i
	perl_tru i.plTR >i
	@${m_diff} i
	chmod +x i
	{ echo "i\n  $$Title\n    usage"; ./i -? 2>&1 | i -it 1 ; } >docs/README.txt
	@${m_diff} docs/README.txt
	{ sed "s/^    usage$$/    code/" docs/README.txt ; echo "style\\n  Title\\t$$Title" ; } | html_tru >docs/README.html
	@${m_diff} docs/README.html
