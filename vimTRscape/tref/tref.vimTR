VERSION	4.0
usage	tref
	this plugin provides the mapping \tr for opening a context-view for the current line.

	It requires vim with +perl.

	a new window is opened which contains only the parent (wrt. to indent) lines of the current line.

	the \ below indicates the leader, you can redefine it (:help leader)
	To choose a completely different mapping, put the following into your ~/.vimrc
	    map whatever :perl loc<CR>:exe "resize ". line("$")<CR>mxgg'x<C-W>p:<BS>
	  in this case \tr remains untouched, it is not mapped here again.

	to install this plugin put this file into ~/.vim/plugin/
	you also need to have LL installed, since this provides disp.vim, which is also required here.
!	has("perl")	finish
runtime disp.vim
Interface	/strux/Context
  <CR>			&Strux.&Context.&go to line			go to the line			:perl gotoTheLine()<CR>
    go to this line
map?	\tr	:perl loc<CR>:exe "resize ". line("$")<CR>mxgg'x<C-W>p:<BS>	open context for the current line
perl
  subs
    loc
      my $ln=($curwin->Cursor())[0]
      my $l=$curbuf->Get($ln)
      (my $success, local $ts) = VIM::Eval("&ts")
      my $indent=indent($l)
      (my $success, my $foldignore) = VIM::Eval("&foldignore")
      ?	$foldignore	$foldignore_regexp = '\s*\\'.$foldignore	$foldignore_regexp=''
      my @A=()
      W	--$ln>-1
	?	(my $ni=indent(my $nl=$curbuf->Get($ln))) < $indent
	  unshift @A,[$ln,$nl]
	  !	$nl =~ /\s*-$/	$indent=$ni
      disp		/strux/Context
	Array		\@A
	item_function	\&showline
	bufferNr		$curbuf->Number()
	in_function	sub { VIM::DoCommand("setlocal ts=$ts") }
    indent	$l
      ?	$l eq ""						return 99999999
      ?	$foldignore_regexp and $l =~ /$foldignore_regexp/	return 99999999
      (my $tabs,my $spaces) = $l =~ /^(\t*)( *)/
      length($tabs)*$ts+length($spaces)
    showline	$D,$i
      @{@$D[$i]}[1]
    gotoTheLine
      VIM::DoCommand("sb $$disp::H{bufferNr}|@{@$disp::A[($curwin->Cursor())[0]-1]}[0]")
