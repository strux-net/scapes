*pstree.txt*        An interactive pstree view
                               Vim version 8
Author: Michael Naumann
URL : www.strux.net
Last change: 30.10.2009				*pstree*

1. Overview					|pstree-intro|
2. Usage					|pstree-using|
3. Commands					|pstree-Commands|
4. Configuration				|pstree-configuration|
5. pstree on the internet			|pstree-internet|
6. Requirements					|pstree-requirement|
7. Installation					|pstree-install|
8. A sample session				|pstree-sample|

==============================================================================
						*pstree-intro*
1. Overview~

pstree is a vim-plugin that shows an interactive tree of the processes
running on your system.

First-time users try|pstree-sample|

==============================================================================
						*pstree-using*
2. Usage~

pstree can be started in different ways:
  From your shell: >

      pst		starts a new vim showing your current pstree
      pst pattern	like above, but position cursor on first hit for pattern

< From within vim: >
      :e pstree		or even :sp pstree and alike
<
==============================================================================
						*pstree-Commands*
3. Commands~

3.1 starting an pstree-view~

:e pstree

3.1 working with an pstree-view~

You navigate within the pstree-view using the usual vim-keybindings
  You can read more about advanced navigation
    Navigation	|navigation|
    Scrolling	|scrolling|

A complete list is here |pstree-commands|

A quick overview follows

  COMMANDS FOR VIEW PSTREE	*

    STRUX.PSTREE~
      r               Refresh view                                                |pstree-r|
      P               Goto next pid                                               |pstree-P|
      p               Search next Pid and show info                               |pstree-p|
      K               Kill this process                                           |pstree-K|
      i               Info about this pid                                         |pstree-i|
      a               LL of /proc/<pid>                                           |pstree-a|

==============================================================================
						*pstree-configuration*
4. Configuration~

  the following var can be set by the user

    var						default value
    ----------------				-------------
    g:strux_pstree_InitialInfoWinHeight		10

*g:strux_pstree_InitialInfoWinHeight*
  Defaults to 10
  The value of this var is used when opening the insepct-window for the first
  time. It determines the size in lines for this window.

  See|pstree-i|

==============================================================================
						*pstree-internet*
5. pstree on the internet~

You can download the latest version from www.strux.net

==============================================================================
						*pstree-requirement*
6. Requirements~

This plugin works only on unix-like systems.

You need vim 7.2
  For some of the features you need a perl-enabled vim.
  Most things will work, even without perl

  You also need the unix-command pstree
  (on debian-like systems it can be found in package psmisc)

==============================================================================
						*pstree-install*
7. Installation~
  The installation is very easy and is usually finished in a minute or two.

  It is part of the LL-plugin.
  See |LL-install|for details.

==============================================================================
						*pstree-sample*
8. A sample session~
  from your shell type >
    pst
< or inside a running vim type either of >
    :e pstree		to start pstree in the current window
    :sp pstree		to start pstree in a new (split) window
    :tabnew pstree	to start pstree in it's own tab

< depending on the colorscheme you chose, you'll see >
    processname(nr)		where nr is the pid of the process
    processname(nr,user)	where and when user is different from the parent's user
<
  usernames are colored differently >
    the process belongs to you
    the process belongs to root
    the process belongs to someone else

< processes in {} are threads.

  Press <F1> and take a short look on the possible commands.
  Play around with the commands. You can not do any harm.
  Also try the kill command. Unless you are root, you cannot kill a process
  not belonging to you. Press K and note the bottom-line.
  You'll notice >
    :!kill -9 1234		where 1234 might be something different
< The cursor is on tbe blank after the 9, so you can easily put another signal here.
  You can press ctrl-c to cancel the command.
    
==============================================================================
vim:ft=LL-help

