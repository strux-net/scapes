"
" Autogenerated from vim_tru using findShorterIndent.vimTR
" do not edit this file, look for findShorterIndent.vimTR and change this
" or you may loose all your changes and probably choose the wrong method.
" goto http://www.strux.net to find more information.
"
" based on findShorterIndent.vimTR , version : 4.0
"usage for findShorterIndent.vim
"	skips the cursor (in the given direction) according to indents.
"	if the cursor is on an empty line
"	  skip to the next/prev non-empty
"	else
"	  if the cursor is on a leftaligned line, i.E the line doesn't start with whitespace 
"	    skip to the next/prev leftaligned-line, skipping whole blocks.
"	  else
"	    skip over all lines with the same or higher indent.
"
"	to install this plugin put this file into ~/.vim/plugin/
"	You may sure want to choose other keys for the mappings.
"
"	<Up>	search Up   in normal mode
"	<Down>	search Down in normal mode
"	<Up>	search Up   in operator-pending mode
"	<Down>	search Down in operator-pending mode
"	<Up>	search Up   in visual mode
"	<Down>	search Down in visual mode
"
"---------------------------------------------
if !hasmapto(":<C-U>call PrevShorterIndent()<CR>",'n')
  " <Up>       -> search Up   in normal mode
  nnoremap <silent> <Up> :<C-U>call PrevShorterIndent()<CR>
endif
if !hasmapto(":<C-U>call NextShorterIndent()<CR>",'n')
  " <Down>       -> search Down in normal mode
  nnoremap <silent> <Down> :<C-U>call NextShorterIndent()<CR>
endif
if !hasmapto(":<C-U>call PrevShorterIndent()<CR>",'o')
  " <Up>       -> search Up   in operator-pending mode
  onoremap <silent> <Up> :<C-U>call PrevShorterIndent()<CR>
endif
if !hasmapto(":<C-U>call NextShorterIndent()<CR>",'o')
  " <Down>       -> search Down in operator-pending mode
  onoremap <silent> <Down> :<C-U>call NextShorterIndent()<CR>
endif
if !hasmapto(":call PrevShorterIndent()<CR>m'gv``",'v')
  " <Up>       -> search Up   in visual mode
  vnoremap <silent> <Up> :call PrevShorterIndent()<CR>m'gv``
endif
if !hasmapto(":call NextShorterIndent()<CR>m'gv``",'v')
  " <Down>       -> search Down in visual mode
  vnoremap <silent> <Down> :call NextShorterIndent()<CR>m'gv``
endif
function!PrevShorterIndent( ) range
  let line=line(".")
  "****************************************
  " if cursorline is empty skip to previous nonempty line
  "****************************************
  if getline(line) == ""
    while line > 0 && getline(line) == ""
      let line=line-1
    endwhile
    " go to new position
    exe line
    return
  endif
  " indent of line on which the cursor is
  let currentIndent=indent(line)
  "****************************************
  " skip back over block of lines of same indent
  "****************************************
  let blockSkipped=0
  while line > 1 && indent(line-1) == currentIndent && getline(line-1) != ""
    let line=line-1
    let blockSkipped=1
  endwhile
  if !blockSkipped && !indent(line) && line > 1
    let line=line-1
    while line > 1 && (indent(line) || getline(line) == "")
      let line=line-1
    endwhile
    " go to new position
    exe line
    return
  endif
  " go to (possibly) new position
  exe line
  while line > 0
    if indent(line) < currentIndent && getline(line) != ""
      " go to new position
      exe line
      return
    endif
    let line=line-1
  endwhile
  echo 'No smaller indent before this line'
endfunc
function!NextShorterIndent( ) range
  let line=line(".")
  " line number of last line in the buffer
  let lastline=line("$")
  "****************************************
  " if cursorline is empty skip to next nonempty line
  "****************************************
  if getline(line) == ""
    while line < lastline && getline(line) == ""
      let line=line+1
    endwhile
    " go to new position
    exe line
    return
  endif
  " indent of line on which the cursor is
  let currentIndent=indent(line)
  "****************************************
  " skip forward over block of lines of same indent
  "****************************************
  let blockSkipped=0
  while line < lastline && indent(line+1) == currentIndent && getline(line+1) != ""
    let line=line+1
    let blockSkipped=1
  endwhile
  if !blockSkipped && !indent(line) && line < lastline
    let line=line+1
    while line < lastline && (indent(line) || getline(line) == "")
      let line=line+1
    endwhile
    " go to new position
    exe line
    return
  endif
  " go to (possibly) new position
  exe line
  while line <= lastline
    if indent(line) < currentIndent && getline(line) != ""
      " go to new position
      exe line
      return
    endif
    let line=line+1
  endwhile
  echo 'No smaller indent after this line'
endfunc
